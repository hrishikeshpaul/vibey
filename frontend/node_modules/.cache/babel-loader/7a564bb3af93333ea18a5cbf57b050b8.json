{"ast":null,"code":"import { GET_API_FAILURE, SET_USER_LOGIN, GET_API_START, GET_API_SUCCESS, SET_CREATE_ROOM_MODAL } from \"./systemActionTypes\";\n\n/**\n * Initial values for the System State\n */\nconst initialState = {\n  isLoading: false,\n  error: {},\n  isLoggedIn: false,\n  createOpen: false\n};\nexport const systemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_API_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_API_SUCCESS:\n      return { ...state,\n        isLoading: false\n      };\n\n    case GET_API_FAILURE:\n      return { ...state,\n        error: action.payload,\n        isLoading: false\n      };\n\n    case SET_USER_LOGIN:\n      return { ...state,\n        isLoggedIn: action.payload\n      };\n\n    case SET_CREATE_ROOM_MODAL:\n      return { ...state,\n        createOpen: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/samuelmunro/development/vibey/frontend/src/app/store/system/systemReducer.ts"],"names":["GET_API_FAILURE","SET_USER_LOGIN","GET_API_START","GET_API_SUCCESS","SET_CREATE_ROOM_MODAL","initialState","isLoading","error","isLoggedIn","createOpen","systemReducer","state","action","type","payload"],"mappings":"AAAA,SAA4BA,eAA5B,EAA6CC,cAA7C,EAA6DC,aAA7D,EAA4EC,eAA5E,EAA6FC,qBAA7F,QAA0H,qBAA1H;;AAuBA;AACA;AACA;AACA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,SAAS,EAAE,KADqB;AAEhCC,EAAAA,KAAK,EAAE,EAFyB;AAGhCC,EAAAA,UAAU,EAAE,KAHoB;AAIhCC,EAAAA,UAAU,EAAE;AAJoB,CAAlC;AAOA,OAAO,MAAMC,aAAa,GAAG,CAC3BC,KAAkB,GAAGN,YADM,EAE3BO,MAF2B,KAGX;AAChB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKH,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKN,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFT;AAGLR,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKV,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAIF;AACE,aAAOH,KAAP;AA5BJ;AA8BD,CAlCM","sourcesContent":["import { SystemActionTypes, GET_API_FAILURE, SET_USER_LOGIN, GET_API_START, GET_API_SUCCESS, SET_CREATE_ROOM_MODAL } from \"./systemActionTypes\";\nimport { Error } from \"app/models/system.model\";\n\nexport interface SystemState {\n  /**\n   * Denotes if the system is in loading state\n   */\n  isLoading: boolean;\n  /**\n   * Stores the error\n   * Will need to change this to store the status code and message\n   */\n  error: Error;\n  /**\n   * Denotes if the user is logged in\n   */\n  isLoggedIn: boolean;\n  /**\n   * Denotes if the create room modal is open\n   */\n  createOpen: boolean;\n}\n\n/**\n * Initial values for the System State\n */\nconst initialState: SystemState = {\n  isLoading: false,\n  error: {},\n  isLoggedIn: false,\n  createOpen: false\n};\n\nexport const systemReducer = (\n  state: SystemState = initialState,\n  action: SystemActionTypes\n): SystemState => {\n  switch (action.type) {\n    case GET_API_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case GET_API_SUCCESS:\n      return {\n        ...state,\n        isLoading: false\n      }\n    case GET_API_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      }\n    case SET_USER_LOGIN:\n      return {\n        ...state,\n        isLoggedIn: action.payload\n      }\n    case SET_CREATE_ROOM_MODAL:\n      return {\n        ...state,\n        createOpen: action.payload\n      }\n    default:\n      return state\n  }\n};\n"]},"metadata":{},"sourceType":"module"}