{"ast":null,"code":"var _jsxFileName = \"/Users/samuelmunro/development/vibey/frontend/src/app/components/CreateRoom/index.tsx\",\n    _s = $RefreshSig$();\n\n/* Copyright (C) 2021 Vibey - All Rights Reserved */\nimport React, { useState, useEffect } from \"react\";\nimport \"./CreateRoom.scss\";\nimport Select from \"../Select\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Input, Textarea, InputGroup, InputRightElement, Tooltip } from \"@chakra-ui/react\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialRoomValues = {\n  name: \"\",\n  description: \"\",\n  tags: [],\n  error: false\n};\n\nconst Create = props => {\n  _s();\n\n  const {\n    open,\n    close,\n    handleError\n  } = props;\n  const [room, setRoom] = useState(initialRoomValues);\n  /**\n   * Set room to initial room when create modal pops up\n   */\n\n  useEffect(() => {\n    setRoom(initialRoomValues);\n  }, []);\n  /**\n   * Submits the rom that emits an event with the room details \n   * and closes the modal\n   * @param e form data - has all the details of a room\n   */\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      close(room);\n      setRoom(initialRoomValues);\n    }\n  };\n  /**\n   * Validates the form to see if the room name is present\n   */\n\n\n  const validateForm = () => {\n    if (!room.name.trim()) {\n      setRoom(prev => ({ ...prev,\n        error: true\n      }));\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Updates the room name and description on change\n   * \n   * @param e event to update name and description\n   */\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRoom(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n  /**\n   * Adds a tag emitted from the Select component to the \n   * room state\n   * \n   * @param tag tag that has been added\n   */\n\n\n  const handleUpdateTags = tag => {\n    const currentTags = room.tags;\n\n    if (tag) {\n      setRoom(prev => ({ ...prev,\n        tags: currentTags.concat(tag)\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: open,\n      onClose: close,\n      size: \"xl\",\n      isCentered: true,\n      autoFocus: false,\n      closeOnOverlayClick: false,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        className: \"bg-secondary text-white rounded-modal py-2\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h4 m-0 font-weight-bolder\",\n            children: \"Create a room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n            className: \"mt-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"create-form\",\n            onSubmit: e => onSubmit(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Room Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  isInvalid: room.error,\n                  placeholder: \"Enter a catchy room name!\",\n                  onChange: handleChange,\n                  type: \"text\",\n                  variant: \"filled\",\n                  className: \"bg-light input-field rounded-lg\",\n                  name: \"name\",\n                  value: room.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), room.error ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  label: \"Please enter a valid room name!\",\n                  \"aria-label\": \"Please enter a valid room name!\",\n                  className: \"bg-danger\",\n                  children: /*#__PURE__*/_jsxDEV(InputRightElement, {\n                    children: /*#__PURE__*/_jsxDEV(TiWarning, {\n                      className: \"text-danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Room Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                className: \"bg-light input-field rounded-lg\",\n                variant: \"filled\",\n                type: \"text\",\n                placeholder: \"What type of music will you be playing in the room?\",\n                size: \"sm\",\n                onChange: handleChange,\n                name: \"description\",\n                value: room.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                updateTags: handleUpdateTags,\n                presentTags: room.tags,\n                handleError: handleError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary font-weight-bold\",\n              type: \"submit\",\n              form: \"create-form\",\n              children: \"Create Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"va0XjGk/6qDs8JQSjjnTbg8Ye+I=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/samuelmunro/development/vibey/frontend/src/app/components/CreateRoom/index.tsx"],"names":["React","useState","useEffect","Select","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Input","Textarea","InputGroup","InputRightElement","Tooltip","TiWarning","initialRoomValues","name","description","tags","error","Create","props","open","close","handleError","room","setRoom","onSubmit","e","preventDefault","validateForm","trim","prev","handleChange","value","target","handleUpdateTags","tag","currentTags","concat"],"mappings":"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","sourcesContent":["/* Copyright (C) 2021 Vibey - All Rights Reserved */\n\nimport React, { PropsWithChildren, useState, useEffect } from \"react\";\nimport \"./CreateRoom.scss\";\nimport Select from \"../Select\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Input,\n  Textarea,\n  InputGroup,\n  InputRightElement,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { TiWarning } from \"react-icons/ti\";\n\ntype CreateProps = {\n  open: boolean;\n  close: any;\n  handleError: (error: any) => void;\n};\n\nconst initialRoomValues = {\n  name: \"\",\n  description: \"\",\n  tags: [],\n  error: false,\n};\n\n\nconst Create = (props: PropsWithChildren<CreateProps>) => {\n  const { open, close, handleError } = props;\n  const [room, setRoom] = useState(initialRoomValues);\n\n  /**\n   * Set room to initial room when create modal pops up\n   */\n  useEffect(() => {\n    setRoom(initialRoomValues);\n  }, []);\n\n  /**\n   * Submits the rom that emits an event with the room details \n   * and closes the modal\n   * @param e form data - has all the details of a room\n   */\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    if (validateForm()) {\n      close(room);\n      setRoom(initialRoomValues);\n    }\n  };\n\n  /**\n   * Validates the form to see if the room name is present\n   */\n  const validateForm = () => {\n    if (!room.name.trim()) {\n      setRoom((prev) => ({\n        ...prev,\n        error: true,\n      }));\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Updates the room name and description on change\n   * \n   * @param e event to update name and description\n   */\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    setRoom((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  /**\n   * Adds a tag emitted from the Select component to the \n   * room state\n   * \n   * @param tag tag that has been added\n   */\n  const handleUpdateTags = (tag: any) => {\n    const currentTags = room.tags;\n    if (tag) {\n      setRoom((prev) => ({\n        ...prev,\n        tags: currentTags.concat(tag)\n      }))\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={open}\n        onClose={close}\n        size=\"xl\"\n        isCentered={true}\n        autoFocus={false}\n        closeOnOverlayClick={false}\n      >\n        <ModalOverlay />\n        <ModalContent className=\"bg-secondary text-white rounded-modal py-2\">\n          <ModalHeader>\n            <span className=\"h4 m-0 font-weight-bolder\">Create a room</span>\n            <ModalCloseButton className=\"mt-3\" />\n          </ModalHeader>\n\n          <ModalBody>\n            <form id=\"create-form\" onSubmit={(e) => onSubmit(e)}>\n              <div>\n                <label>Room Name</label>\n                <InputGroup>\n                  <Input\n                    isInvalid={room.error}\n                    placeholder=\"Enter a catchy room name!\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    variant=\"filled\"\n                    className=\"bg-light input-field rounded-lg\"\n                    name=\"name\"\n                    value={room.name}\n                  />\n                  {room.error ? (\n                    <Tooltip\n                      label=\"Please enter a valid room name!\"\n                      aria-label=\"Please enter a valid room name!\"\n                      className=\"bg-danger\"\n                    >\n                      <InputRightElement\n                        children={<TiWarning className=\"text-danger\" />}\n                      />\n                    </Tooltip>\n                  ) : (\n                    \"\"\n                  )}\n                </InputGroup>\n              </div>\n\n              <div className=\"mt-4\">\n                <label>Room Description</label>\n                <Textarea\n                  className=\"bg-light input-field rounded-lg\"\n                  variant=\"filled\"\n                  type=\"text\"\n                  placeholder=\"What type of music will you be playing in the room?\"\n                  size=\"sm\"\n                  onChange={handleChange}\n                  name=\"description\"\n                  value={room.description}\n                />\n              </div>\n              <div className=\"mt-3\">\n                <label>Tags</label>\n                <Select\n                  updateTags={handleUpdateTags}\n                  presentTags={room.tags}\n                  handleError={handleError}\n                ></Select>\n              </div>\n            </form>\n          </ModalBody>\n\n          <ModalFooter>\n            <div className=\"text-right mt-3\">\n              <button\n                className=\"btn btn-primary font-weight-bold\"\n                type=\"submit\"\n                form=\"create-form\"\n              >\n                Create Room\n              </button>\n            </div>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}