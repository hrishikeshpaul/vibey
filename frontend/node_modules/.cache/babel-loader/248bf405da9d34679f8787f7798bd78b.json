{"ast":null,"code":"var _jsxFileName = \"/Users/samuelmunro/development/vibey/frontend/src/app/utils/PrivateRoute.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_USER_LOGIN } from \"app/store/system/systemActionTypes\";\nimport { SET_USER } from \"app/store/user/userActionTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Private route to ensure that components are rendered if the user is\n * logged in.\n * Also dispatches an action to update the state if the user is loggedin\n */\nexport const PrivateRoute = ({\n  component: Component\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loggedIn = checkJWT();\n  dispatch({\n    type: SET_USER_LOGIN,\n    payload: loggedIn\n  });\n\n  if (loggedIn) {\n    dispatch({\n      type: SET_USER,\n      payload: JSON.parse(localStorage.getItem('v-user') || '')\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    render: () => loggedIn ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n/**\n * Public route to ensure that if the user is logged in then route to home\n * Dispatches an action to update the logged in state\n */\n\n_s(PrivateRoute, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PrivateRoute;\nexport const PublicRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const loggedIn = checkJWT();\n  dispatch({\n    type: SET_USER_LOGIN,\n    payload: loggedIn\n  });\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    ...rest,\n    render: props => !loggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n/**\n * Helper function to verify the JWT\n */\n\n_s2(PublicRoute, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = PublicRoute;\n\nconst checkJWT = () => {\n  const token = localStorage.getItem('v-at');\n\n  if (token === null || token === '') {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");","map":{"version":3,"sources":["/Users/samuelmunro/development/vibey/frontend/src/app/utils/PrivateRoute.tsx"],"names":["React","Route","Redirect","useDispatch","SET_USER_LOGIN","SET_USER","PrivateRoute","component","Component","dispatch","loggedIn","checkJWT","type","payload","JSON","parse","localStorage","getItem","PublicRoute","rest","props","token"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAqBC,KAArB,EAA4BC,QAA5B,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,QAAT,QAAyB,gCAAzB;;;AAQA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAyC,GAAG,CAAC;AACxDC,EAAAA,SAAS,EAAEC;AAD6C,CAAD,KAEnD;AAAA;;AACJ,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGC,QAAQ,EAAzB;AACAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAER,cADC;AAEPS,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;;AAKA,MAAGA,QAAH,EAAa;AACXD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,QADC;AAEPQ,MAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EAA7C;AAFF,KAAD,CAAR;AAID;;AACD,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAE,MACNP,QAAQ,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAF/B;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBM;AAyBP;AACA;AACA;AACA;;GA5BaJ,Y;UAGMH,W;;;KAHNG,Y;AA6Bb,OAAO,MAAMY,WAAwC,GAAG,CAAC;AACvDX,EAAAA,SAAS,EAAEC,SAD4C;AAEvD,KAAGW;AAFoD,CAAD,KAGlD;AAAA;;AACJ,QAAMV,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGC,QAAQ,EAAzB;AACAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAER,cADC;AAEPS,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,MADP;AAAA,OAEMS,IAFN;AAGE,IAAA,MAAM,EAAGC,KAAD,IACN,CAACV,QAAD,gBAAY,QAAC,SAAD,OAAgBU;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAZ,gBAAwC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJ5C;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBM;AAsBP;AACA;AACA;;IAxBaF,W;UAIMf,W;;;MAJNe,W;;AAyBb,MAAMP,QAAQ,GAAG,MAAM;AACrB,QAAMU,KAAK,GAAGL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AACA,MAAGI,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAA/B,EAAmC;AACjC,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CAPD","sourcesContent":["import React from \"react\";\nimport { RouteProps, Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_USER_LOGIN } from \"app/store/system/systemActionTypes\";\nimport { SET_USER } from \"app/store/user/userActionTypes\";\n\ntype PrivateRouteProps = {\n  path: RouteProps[\"path\"];\n  exact?: RouteProps[\"exact\"];\n  component: React.ElementType;\n};\n\n/**\n * Private route to ensure that components are rendered if the user is\n * logged in.\n * Also dispatches an action to update the state if the user is loggedin\n */\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n}) => {\n  const dispatch = useDispatch();\n  const loggedIn = checkJWT();\n  dispatch({\n    type: SET_USER_LOGIN,\n    payload: loggedIn\n  });\n\n  if(loggedIn) {\n    dispatch({\n      type: SET_USER,\n      payload: JSON.parse(localStorage.getItem('v-user') || '')\n    })\n  }\n  return (\n    <Route\n      render={() =>\n        loggedIn ? <Component /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\n/**\n * Public route to ensure that if the user is logged in then route to home\n * Dispatches an action to update the logged in state\n */\nexport const PublicRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  const loggedIn = checkJWT();\n  dispatch({\n    type: SET_USER_LOGIN,\n    payload: loggedIn\n  });\n\n  return (\n    <Route\n      exact\n      {...rest}\n      render={(props) =>\n        !loggedIn ? <Component  {...props} /> : <Redirect to=\"/home\" />\n      }\n    />\n  );\n};\n\n/**\n * Helper function to verify the JWT\n */\nconst checkJWT = () => {\n  const token = localStorage.getItem('v-at');\n  if(token === null || token === '') {\n    return false;\n  } else {\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}